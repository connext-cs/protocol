package protocol

const (
	KuberneteServiceName      = "go.micro.api.kubernete"
	K8sProjectServiceName     = "go.micro.api.project"
	K8sClusterServiceName     = "go.micro.api.cluster"
	VMProjectServiceName      = "go.micro.api.vmproject"
	ParentProjectServiceName  = "go.micro.api.vmproject.ParentProjectService"
	BusinessCenterServiceName = "go.micro.api.businesscenter"
	NameSpaceServiceName      = "go.micro.api.namespace"
	CIServiceName             = "go.micro.api.ci"
	GatewayServiceName        = "gateway"
	HostServiceName           = "go.micro.api.HostService"
	JobServiceName            = "jobservice"
	SPServiceName             = "spservice"
	UserServiceName           = "go.micro.api.user"
	VmDeployServiceName       = "go.micro.api.vmdeploy"
	ComponentServiceName      = "go.micro.api.vmproject.component"
	TerraformServiceName      = "go.micro.api.terraform"
	WebAPIService             = "web.apiservice"
	AliyunOperatorServiceName = "go.micro.api.aliyunOperator"
)

const (
	ModelName_kubernete            = "kubernete"
	ModelName_k8sproject           = "k8sproject"
	ModelName_k8scluster           = "k8scluster"
	ModelName_vmproject            = "vmproject"
	ModelName_ParentProjectService = "parentprojectservice"
	ModelName_businesscenter       = "businesscenter"
	ModelName_K8sNameSpaceService  = "k8snamespaceservice"
	ModelName_ci                   = "ci"
	ModelName_gateway              = "gateway"
	ModelName_HostService          = "hostservice"
	ModelName_jobservice           = "jobservice"
	ModelName_spservice            = "spservice"
	ModelName_userService          = "userservice"
	ModelName_vmdeploy             = "vmdeploy"
	ModelName_component            = "component"
	ModelName_terraform            = "terraform"
	ModelName_WebAPIService        = "web.apiservice"
	ModelName_AliyunOperator       = "aliyunoperator"
)

const APIROOTPATH = "/api/v1"
const TEMPLATE_KEY = "micro/config/template"
