syntax = "proto3";

import "github.com/micro/go-api/proto/api.proto";

service Nodegroup {
    //1 分组查询 querygroup
	rpc Querygroup(go.api.Request) returns(go.api.Response) {};                
	//2 新建分组 addgroup
	rpc Addgroup(go.api.Request) returns(go.api.Response) {};             
	//3 修改分组 editgroup
	rpc Editgroup(go.api.Request) returns(go.api.Response) {};                 
	//4 删除分组 deletegroup
	rpc Deletegroup(go.api.Request) returns(go.api.Response) {};            
	//5 添加分组节点 addgroudnode
	rpc Addgroudnode(go.api.Request) returns(go.api.Response) {};                
	//6 查询所有node节点 queryallnode
	rpc Queryallnode(go.api.Request) returns(go.api.Response) {};             
	//7 查询分组节点 querygroudnode
	rpc Querygroudnode(go.api.Request) returns(go.api.Response) {};        
	//8 查询所有未关联分组节点 queryallnotrelatedgroupnode
	rpc Queryallnotrelatedgroupnode(go.api.Request) returns(go.api.Response) {};      
    //9 分组查询 querygroup
	rpc QueryGroupNodeCount(Group) returns(GroupNodeCount) {}; 
}

message Group {
    int32  GroupID              = 1;
	string ClusterNodeGroupName = 2;
	string ClusterNodeGroupK8sName = 3;
}

message GroupNodeCount {
    int32  NodeCount            = 1;
}